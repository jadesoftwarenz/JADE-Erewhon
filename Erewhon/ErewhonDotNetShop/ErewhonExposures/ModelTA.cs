//*****************************************************************************
//
//      This code was generated by the JADE Exposure Wizard.
//
//      JADE Version    : 22.0.03
//      Generation date : Tuesday, 27 February 2024
//      Generated by    : cnwth3
//      JADE Schema     : ErehwhonExternalInterfacesSchema
//      Exposure Name   : ErewhonExposures
//
//      NOTE: You should NOT change this file as it may cause incorrect
//            behaviour. Any changes that you do make will be lost if
//            this code is regenerated.
//
//*****************************************************************************

namespace ErewhonExposures
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using JadeSoftware.Joob;
	using JadeSoftware.Joob.Client;
	using JadeSoftware.Joob.Metadata;
	using JadeSoftware.Joob.Management;
	using JadeSoftware.Joob.MetaSchema;
	using JadeSoftware.Jade.DotNetInterop;

	[System.Runtime.Serialization.KnownTypeAttribute(typeof(StringArray))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(PersistentModel))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(ShoppingCartTA))]
	[System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
	[System.ComponentModel.DataAnnotations.MetadataTypeAttribute(typeof(ModelTAMetadata))]
	[JadeSoftware.Joob.Client.JoobClassAttribute("ModelTA", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema", ClassNamespace="ErewhonExposures")]
	[JadeSoftware.Joob.Metadata.JomlTypeAttribute(JadeSoftware.Joob.Metadata.JomlTypeKind.Class, "ModelTA", typeof(JoobObject))]
	public partial class ModelTA : JoobObject
	{
		private static ModelTAMetadata _metaModel;
		partial void _initialize();
		static ModelTA()
		{
			_metaModel = MetadataCache<ModelTAMetadata>.GetData(null);
		}
		public ModelTA() :
			this(JadeSoftware.Joob.ClassPersistence.Transient)
		{
		}
		public ModelTA(JadeSoftware.Joob.ClassPersistence lifetime) :
			base(lifetime, typeof(ModelTA), _metaModel.metaClass)
		{
			this._initialize();
		}
		protected ModelTA(JadeSoftware.Joob.ClassPersistence lifetime, System.Type type, JadeSoftware.Joob.ClassMetadata metaClass, params System.Object[] parameters) :
			base(lifetime, type, metaClass, parameters)
		{
			this._initialize();
		}
	
#region Jade Properties

		/// <summary>
		/// All errors encountered during the update, including for example validation errors.
		/// 
		/// Any error will result in that TA aborting the create/update/delete/modify operation.
		/// 
		/// If a TA has subordinate TAs, any error returned from the subordinate TA should be copied to the controlling TA so that the framework will abort the transaction and return the errors.
		/// </summary>
		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allErrors", typeof(StringArray), DatabaseTypeName="StringArray")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public StringArray AllErrors
		{
			get
			{
				return this.GetPropertyReference<StringArray>(_metaModel.metaClass, _metaModel.allErrors);
			}
			private set { }
		}

		/// <summary>
		/// All warning messages returned by a TA.
		/// 
		/// eg: You could call the 'validate' method prior to attempting an update.  Then, if only warnings are returned you can display those warnings to the user and ask them if they want to continue with the update.
		/// 
		/// Warnings won't prevent the TA from completing a requested create/update/delete/modify.
		/// </summary>
		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allWarnings", typeof(StringArray), DatabaseTypeName="StringArray")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public StringArray AllWarnings
		{
			get
			{
				return this.GetPropertyReference<StringArray>(_metaModel.metaClass, _metaModel.allWarnings);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("guid", typeof(String), Length=38, DatabaseTypeName="String")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public String Guid
		{
			get
			{
				return this.GetPropertyString(_metaModel.metaClass, _metaModel.guid);
			}
			set
			{
				this.SetPropertyString(_metaModel.metaClass, _metaModel.guid, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("myModelObject", typeof(PersistentModel), DatabaseTypeName="PersistentModel")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public PersistentModel MyModelObject
		{
			get
			{
				return this.GetPropertyReference<PersistentModel>(_metaModel.metaClass, _metaModel.myModelObject);
			}
			set
			{
				this.SetPropertyReference(_metaModel.metaClass, _metaModel.myModelObject, value, false);
			}
		}
	#endregion
	
#region Jade Methods

		[JadeSoftware.Joob.Client.JoobMethodAttribute("addError")]
		public void AddError(String pError, String pFocusField)
		{
			using (JadeParam jadeParam1 = new JadeParamString(pError),
							jadeParam2 = new JadeParamString(pFocusField))
			{
				this.SendMessage(_metaModel.addError, null, jadeParam1, jadeParam2);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("addWarning")]
		public void AddWarning(String pWarning, String pFocusField)
		{
			using (JadeParam jadeParam1 = new JadeParamString(pWarning),
							jadeParam2 = new JadeParamString(pFocusField))
			{
				this.SendMessage(_metaModel.addWarning, null, jadeParam1, jadeParam2);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("getFullErrorDetails")]
		public String ErrorsToString()
		{
			using (JadeParam retnParam = new JadeParamString(Usage.Output))
			{
				this.SendMessage(_metaModel.getFullErrorDetails, retnParam);
				return (retnParam as JadeParamString).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("persistEntity")]
		public Boolean PersistEntity(Int32 pTransactionType)
		{
			using (JadeParam retnParam = new JadeParamBoolean(Usage.Output),
							jadeParam = new JadeParamInteger(pTransactionType))
			{
				this.SendMessage(_metaModel.persistEntity, retnParam, jadeParam);
				return (retnParam as JadeParamBoolean).Value;
			}

		}
	#endregion
	
#region Jade Constants

		public const Int32 TransactionTypePersist = 0;
	#endregion
	}

	public partial class ModelTAMetadata : JadeSoftware.Joob.IDomainMetadata
	{

		internal JadeSoftware.Joob.ClassMetadata metaClass;
		internal JadeSoftware.Joob.MethodMetadata addError;
		internal JadeSoftware.Joob.MethodMetadata addWarning;
		internal JadeSoftware.Joob.PropertyMetadata allErrors;
		internal JadeSoftware.Joob.PropertyMetadata allWarnings;
		internal JadeSoftware.Joob.MethodMetadata getFullErrorDetails;
		internal JadeSoftware.Joob.PropertyMetadata guid;
		internal JadeSoftware.Joob.PropertyMetadata myModelObject;
		internal JadeSoftware.Joob.MethodMetadata persistEntity;

		private ModelTAMetadata()
		{
		}
		partial void InitializeDynamicProperties(JadeSoftware.Joob.Client.IJoobConnection connection);

		public ModelTAMetadata(JadeSoftware.Joob.Client.JoobConnection connection)
		{
			metaClass = new JadeSoftware.Joob.ClassMetadata(connection, typeof(ModelTA), "ModelTA", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema");
			this.InitializeProperties(connection);
			this.InitializeDynamicProperties(connection);
		}

		private void InitializeProperties(JadeSoftware.Joob.Client.IJoobConnection connection)
		{
			addError = metaClass.CheckMethod(metaClass,"addError");
			addWarning = metaClass.CheckMethod(metaClass,"addWarning");
			allErrors = metaClass.CheckProperty("allErrors", typeof(StringArray));
			allWarnings = metaClass.CheckProperty("allWarnings", typeof(StringArray));
			getFullErrorDetails = metaClass.CheckMethod(metaClass,"getFullErrorDetails");
			guid = metaClass.CheckProperty("guid", typeof(String), 38);
			myModelObject = metaClass.CheckProperty("myModelObject", typeof(PersistentModel));
			persistEntity = metaClass.CheckMethod(metaClass,"persistEntity");
		}
	}
}
