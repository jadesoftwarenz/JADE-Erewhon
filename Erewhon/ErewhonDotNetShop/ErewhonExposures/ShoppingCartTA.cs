//*****************************************************************************
//
//      This code was generated by the JADE Exposure Wizard.
//
//      JADE Version    : 22.0.03
//      Generation date : Tuesday, 27 February 2024
//      Generated by    : cnwth3
//      JADE Schema     : ErehwhonExternalInterfacesSchema
//      Exposure Name   : ErewhonExposures
//
//      NOTE: You should NOT change this file as it may cause incorrect
//            behaviour. Any changes that you do make will be lost if
//            this code is regenerated.
//
//*****************************************************************************

namespace ErewhonExposures
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using JadeSoftware.Joob;
	using JadeSoftware.Joob.Client;
	using JadeSoftware.Joob.Metadata;
	using JadeSoftware.Joob.Management;
	using JadeSoftware.Joob.MetaSchema;
	using JadeSoftware.Jade.DotNetInterop;

	[System.Runtime.Serialization.KnownTypeAttribute(typeof(CartItemsDict))]
	[System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
	[System.ComponentModel.DataAnnotations.MetadataTypeAttribute(typeof(ShoppingCartTAMetadata))]
	[JadeSoftware.Joob.Client.JoobClassAttribute("ShoppingCartTA", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema", ClassNamespace="ErewhonExposures")]
	[JadeSoftware.Joob.Metadata.JomlTypeAttribute(JadeSoftware.Joob.Metadata.JomlTypeKind.Class, "ShoppingCartTA", typeof(ModelTA))]
	public partial class ShoppingCartTA : ModelTA
	{
		private static ShoppingCartTAMetadata _metaModel;
		partial void _initialize();
		static ShoppingCartTA()
		{
			_metaModel = MetadataCache<ShoppingCartTAMetadata>.GetData(null);
		}
		public ShoppingCartTA() :
			this(JadeSoftware.Joob.ClassPersistence.Transient)
		{
		}
		public ShoppingCartTA(JadeSoftware.Joob.ClassPersistence lifetime) :
			base(lifetime, typeof(ShoppingCartTA), _metaModel.metaClass)
		{
			this._initialize();
		}
		protected ShoppingCartTA(JadeSoftware.Joob.ClassPersistence lifetime, System.Type type, JadeSoftware.Joob.ClassMetadata metaClass, params System.Object[] parameters) :
			base(lifetime, type, metaClass, parameters)
		{
			this._initialize();
		}
	
#region Jade Properties

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allCartItems", typeof(CartItemsDict), DatabaseTypeName="CartItemsDict")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public CartItemsDict AllCartItems
		{
			get
			{
				return this.GetPropertyReference<CartItemsDict>(_metaModel.metaClass, _metaModel.allCartItems);
			}
			private set { }
		}
	#endregion
	
#region Jade Methods

		[JadeSoftware.Joob.Client.JoobMethodAttribute("addItem")]
		public Boolean AddItem(Item pItem, Decimal pOffer)
		{
			using (JadeParam retnParam = new JadeParamBoolean(Usage.Output),
							jadeParam1 = new JadeParamObject(pItem),
							jadeParam2 = new JadeParamDecimal(pOffer))
			{
				this.SendMessage(_metaModel.addItem, retnParam, jadeParam1, jadeParam2);
				return (retnParam as JadeParamBoolean).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("contains")]
		public Boolean Contains(Item pItem)
		{
			using (JadeParam retnParam = new JadeParamBoolean(Usage.Output),
							jadeParam = new JadeParamObject(pItem))
			{
				this.SendMessage(_metaModel.contains, retnParam, jadeParam);
				return (retnParam as JadeParamBoolean).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("getCartTotal")]
		public Decimal GetCartTotal()
		{
			using (JadeParam retnParam = new JadeParamDecimal(Usage.Output))
			{
				this.SendMessage(_metaModel.getCartTotal, retnParam);
				return (retnParam as JadeParamDecimal).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("initialize")]
		public void Initialize()
		{
			{
				this.SendMessage(_metaModel.initialize, null);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("isEmpty")]
		public Boolean IsEmpty()
		{
			using (JadeParam retnParam = new JadeParamBoolean(Usage.Output))
			{
				this.SendMessage(_metaModel.isEmpty, retnParam);
				return (retnParam as JadeParamBoolean).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("removeItem")]
		public Boolean RemoveItem(Item pItem)
		{
			using (JadeParam retnParam = new JadeParamBoolean(Usage.Output),
							jadeParam = new JadeParamObject(pItem))
			{
				this.SendMessage(_metaModel.removeItem, retnParam, jadeParam);
				return (retnParam as JadeParamBoolean).Value;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("size")]
		public Int32 Size()
		{
			using (JadeParam retnParam = new JadeParamInteger(Usage.Output))
			{
				this.SendMessage(_metaModel.size, retnParam);
				return (retnParam as JadeParamInteger).Value;
			}

		}
	#endregion
	}

	public partial class ShoppingCartTAMetadata : JadeSoftware.Joob.IDomainMetadata
	{

		internal JadeSoftware.Joob.ClassMetadata metaClass;
		internal JadeSoftware.Joob.MethodMetadata addItem;
		internal JadeSoftware.Joob.PropertyMetadata allCartItems;
		internal JadeSoftware.Joob.MethodMetadata contains;
		internal JadeSoftware.Joob.MethodMetadata getCartTotal;
		internal JadeSoftware.Joob.MethodMetadata initialize;
		internal JadeSoftware.Joob.MethodMetadata isEmpty;
		internal JadeSoftware.Joob.MethodMetadata removeItem;
		internal JadeSoftware.Joob.MethodMetadata size;

		private ShoppingCartTAMetadata()
		{
		}
		partial void InitializeDynamicProperties(JadeSoftware.Joob.Client.IJoobConnection connection);

		public ShoppingCartTAMetadata(JadeSoftware.Joob.Client.JoobConnection connection)
		{
			metaClass = new JadeSoftware.Joob.ClassMetadata(connection, typeof(ShoppingCartTA), "ShoppingCartTA", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema");
			this.InitializeProperties(connection);
			this.InitializeDynamicProperties(connection);
		}

		private void InitializeProperties(JadeSoftware.Joob.Client.IJoobConnection connection)
		{
			addItem = metaClass.CheckMethod(metaClass,"addItem");
			allCartItems = metaClass.CheckProperty("allCartItems", typeof(CartItemsDict));
			contains = metaClass.CheckMethod(metaClass,"contains");
			getCartTotal = metaClass.CheckMethod(metaClass,"getCartTotal");
			initialize = metaClass.CheckMethod(metaClass,"initialize");
			isEmpty = metaClass.CheckMethod(metaClass,"isEmpty");
			removeItem = metaClass.CheckMethod(metaClass,"removeItem");
			size = metaClass.CheckMethod(metaClass,"size");
		}
	}
}
