//*****************************************************************************
//
//      This code was generated by the JADE Exposure Wizard.
//
//      JADE Version    : 22.0.03
//      Generation date : Tuesday, 27 February 2024
//      Generated by    : cnwth3
//      JADE Schema     : ErehwhonExternalInterfacesSchema
//      Exposure Name   : ErewhonExposures
//
//      NOTE: You should NOT change this file as it may cause incorrect
//            behaviour. Any changes that you do make will be lost if
//            this code is regenerated.
//
//*****************************************************************************

namespace ErewhonExposures
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using JadeSoftware.Joob;
	using JadeSoftware.Joob.Client;
	using JadeSoftware.Joob.Metadata;
	using JadeSoftware.Joob.Management;
	using JadeSoftware.Joob.MetaSchema;
	using JadeSoftware.Jade.DotNetInterop;

	/// <summary>
	/// This class is responsible for managing the search functionality for Items.
	/// 
	/// The main search operation is performed within the doSearch() method, which returns 
	/// an ItemByCodeDict collection containing the Items found. By default, 
	/// the search excludes items that have been sold and tenders that are closed. 
	/// If you want to include these items in the search results, you can set the 
	/// includeSoldItems and includeClosedTenders properties to true.
	/// 
	/// The myItems collection is marked as 'Exclusive' because it is exclusively used 
	/// by the current class and is not embedded within the class structure. Consequently, 
	/// the collection is automatically created and destroyed when the parent object is 
	/// instantiated and destroyed, respectively. This design eliminates the need to create 
	/// a temporary instance of the myItems collection in the constructor (create) method 
	/// and avoids the necessity of deleting this temporary object in the destructor (delete) method. 
	/// Thus, any potential memory leaks related to the transient mySaleItems object are prevented.
	/// </summary>
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(ItemsByNumberDict))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(Country))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(ItemCategory))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(Region))]
	[System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
	[System.ComponentModel.DataAnnotations.MetadataTypeAttribute(typeof(ItemSearchMetadata))]
	[JadeSoftware.Joob.Client.JoobClassAttribute("ItemSearch", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema", ClassNamespace="ErewhonExposures")]
	[JadeSoftware.Joob.Metadata.JomlTypeAttribute(JadeSoftware.Joob.Metadata.JomlTypeKind.Class, "ItemSearch", typeof(JoobObject))]
	public partial class ItemSearch : JoobObject
	{
		private static ItemSearchMetadata _metaModel;
		partial void _initialize();
		static ItemSearch()
		{
			_metaModel = MetadataCache<ItemSearchMetadata>.GetData(null);
		}
		public ItemSearch() :
			this(JadeSoftware.Joob.ClassPersistence.Transient)
		{
		}
		public ItemSearch(JadeSoftware.Joob.ClassPersistence lifetime) :
			base(lifetime, typeof(ItemSearch), _metaModel.metaClass)
		{
			this._initialize();
		}
		protected ItemSearch(JadeSoftware.Joob.ClassPersistence lifetime, System.Type type, JadeSoftware.Joob.ClassMetadata metaClass, params System.Object[] parameters) :
			base(lifetime, type, metaClass, parameters)
		{
			this._initialize();
		}
	
#region Jade Properties

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allItems", typeof(ItemsByNumberDict), DatabaseTypeName="ItemsByNumberDict")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public ItemsByNumberDict AllItems
		{
			get
			{
				return this.GetPropertyReference<ItemsByNumberDict>(_metaModel.metaClass, _metaModel.allItems);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("includeClosedTenders", typeof(Boolean), DatabaseTypeName="Boolean")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Boolean IncludeClosedTenders
		{
			get
			{
				return this.GetPropertyBoolean(_metaModel.metaClass, _metaModel.includeClosedTenders);
			}
			set
			{
				this.SetPropertyBoolean(_metaModel.metaClass, _metaModel.includeClosedTenders, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("includeItemsInCart", typeof(Boolean), DatabaseTypeName="Boolean")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Boolean IncludeItemsInCart
		{
			get
			{
				return this.GetPropertyBoolean(_metaModel.metaClass, _metaModel.includeItemsInCart);
			}
			set
			{
				this.SetPropertyBoolean(_metaModel.metaClass, _metaModel.includeItemsInCart, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("includeSoldItems", typeof(Boolean), DatabaseTypeName="Boolean")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Boolean IncludeSoldItems
		{
			get
			{
				return this.GetPropertyBoolean(_metaModel.metaClass, _metaModel.includeSoldItems);
			}
			set
			{
				this.SetPropertyBoolean(_metaModel.metaClass, _metaModel.includeSoldItems, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("myCountry", typeof(Country), DatabaseTypeName="Country")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Country MyCountry
		{
			get
			{
				return this.GetPropertyReference<Country>(_metaModel.metaClass, _metaModel.myCountry);
			}
			set
			{
				this.SetPropertyReference(_metaModel.metaClass, _metaModel.myCountry, value, false);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("myItemCategory", typeof(ItemCategory), DatabaseTypeName="ItemCategory")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public ItemCategory MyItemCategory
		{
			get
			{
				return this.GetPropertyReference<ItemCategory>(_metaModel.metaClass, _metaModel.myItemCategory);
			}
			set
			{
				this.SetPropertyReference(_metaModel.metaClass, _metaModel.myItemCategory, value, false);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("myRegion", typeof(Region), DatabaseTypeName="Region")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Region MyRegion
		{
			get
			{
				return this.GetPropertyReference<Region>(_metaModel.metaClass, _metaModel.myRegion);
			}
			set
			{
				this.SetPropertyReference(_metaModel.metaClass, _metaModel.myRegion, value, false);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("onlyRetailItems", typeof(Boolean), DatabaseTypeName="Boolean")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Boolean OnlyRetailItems
		{
			get
			{
				return this.GetPropertyBoolean(_metaModel.metaClass, _metaModel.onlyRetailItems);
			}
			set
			{
				this.SetPropertyBoolean(_metaModel.metaClass, _metaModel.onlyRetailItems, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("onlyTenderItems", typeof(Boolean), DatabaseTypeName="Boolean")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Boolean OnlyTenderItems
		{
			get
			{
				return this.GetPropertyBoolean(_metaModel.metaClass, _metaModel.onlyTenderItems);
			}
			set
			{
				this.SetPropertyBoolean(_metaModel.metaClass, _metaModel.onlyTenderItems, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("priceHigh", typeof(Decimal), Precision=12, Scale=2, DatabaseTypeName="Decimal")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Decimal PriceHigh
		{
			get
			{
				return this.GetPropertyDecimal(_metaModel.metaClass, _metaModel.priceHigh);
			}
			set
			{
				this.SetPropertyDecimal(_metaModel.metaClass, _metaModel.priceHigh, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("priceLow", typeof(Decimal), Precision=12, Scale=2, DatabaseTypeName="Decimal")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Decimal PriceLow
		{
			get
			{
				return this.GetPropertyDecimal(_metaModel.metaClass, _metaModel.priceLow);
			}
			set
			{
				this.SetPropertyDecimal(_metaModel.metaClass, _metaModel.priceLow, value);
			}
		}
	#endregion
	
#region Jade Methods

		[JadeSoftware.Joob.Client.JoobMethodAttribute("doSearch")]
		public void Search()
		{
			{
				this.SendMessage(_metaModel.doSearch, null);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("initialize")]
		public void Initialize()
		{
			{
				this.SendMessage(_metaModel.initialize, null);
				return;
			}

		}
	#endregion
	}

	public partial class ItemSearchMetadata : JadeSoftware.Joob.IDomainMetadata
	{

		internal JadeSoftware.Joob.ClassMetadata metaClass;
		internal JadeSoftware.Joob.PropertyMetadata allItems;
		internal JadeSoftware.Joob.MethodMetadata doSearch;
		internal JadeSoftware.Joob.PropertyMetadata includeClosedTenders;
		internal JadeSoftware.Joob.PropertyMetadata includeItemsInCart;
		internal JadeSoftware.Joob.PropertyMetadata includeSoldItems;
		internal JadeSoftware.Joob.MethodMetadata initialize;
		internal JadeSoftware.Joob.PropertyMetadata myCountry;
		internal JadeSoftware.Joob.PropertyMetadata myItemCategory;
		internal JadeSoftware.Joob.PropertyMetadata myRegion;
		internal JadeSoftware.Joob.PropertyMetadata onlyRetailItems;
		internal JadeSoftware.Joob.PropertyMetadata onlyTenderItems;
		internal JadeSoftware.Joob.PropertyMetadata priceHigh;
		internal JadeSoftware.Joob.PropertyMetadata priceLow;

		private ItemSearchMetadata()
		{
		}
		partial void InitializeDynamicProperties(JadeSoftware.Joob.Client.IJoobConnection connection);

		public ItemSearchMetadata(JadeSoftware.Joob.Client.JoobConnection connection)
		{
			metaClass = new JadeSoftware.Joob.ClassMetadata(connection, typeof(ItemSearch), "ItemSearch", "RootSchema.CardSchema.ErewhonBaseSchema.ErewhonModelSchema");
			this.InitializeProperties(connection);
			this.InitializeDynamicProperties(connection);
		}

		private void InitializeProperties(JadeSoftware.Joob.Client.IJoobConnection connection)
		{
			allItems = metaClass.CheckProperty("allItems", typeof(ItemsByNumberDict));
			doSearch = metaClass.CheckMethod(metaClass,"doSearch");
			includeClosedTenders = metaClass.CheckProperty("includeClosedTenders", typeof(Boolean));
			includeItemsInCart = metaClass.CheckProperty("includeItemsInCart", typeof(Boolean));
			includeSoldItems = metaClass.CheckProperty("includeSoldItems", typeof(Boolean));
			initialize = metaClass.CheckMethod(metaClass,"initialize");
			myCountry = metaClass.CheckProperty("myCountry", typeof(Country));
			myItemCategory = metaClass.CheckProperty("myItemCategory", typeof(ItemCategory));
			myRegion = metaClass.CheckProperty("myRegion", typeof(Region));
			onlyRetailItems = metaClass.CheckProperty("onlyRetailItems", typeof(Boolean));
			onlyTenderItems = metaClass.CheckProperty("onlyTenderItems", typeof(Boolean));
			priceHigh = metaClass.CheckProperty("priceHigh", typeof(Decimal), 12, 2);
			priceLow = metaClass.CheckProperty("priceLow", typeof(Decimal), 12, 2);
		}
	}
}
